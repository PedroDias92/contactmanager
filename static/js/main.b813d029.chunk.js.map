{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","console","log","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onClickDelete","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","protoTypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","Header","branding","href","defaulProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b813d029.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      console.log(action);\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    /* fetch(\"https://jsonplaceholder.typicode.com/users/\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          contacts: data\n        });\n      }); */\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users/\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = () => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n  onClickDelete = async (id, dispatch) => {\n    console.log(\"delete \", { id });\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name + \" \"}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onClickDelete.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.protoTypes = {\n  contact: PropTypes.object.isRequired\n  /* deleteClickHandler: PropTypes.func.isRequired */\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nexport default class Contacts extends Component {\n  /* deleteContact = (id, event) => {\n    const { contacts } = this.state;\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    this.setState({\n      contacts: newContacts\n    });\n  }; */\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                about\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaulProps = {\n  //this puts default's\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport default function TextInputGroup(props) {\n  const { label, name, value, type, placeholder, onChange, error } = props;\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n          type={type}\n          name={name}\n          className={classnames(\"form-control form-control-lg\", {\n            \"is-invalid\": error\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n}\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n//import uuid from \"uuid\";\n\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //check for erros , VALIDATION\n    if (name === \"\") {\n      this.setState({\n        errors: { name: \"Name is required\" }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: { email: \"Email is required\" }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: { phone: \"Phone is required\" }\n      });\n      return;\n    }\n    const newContact = {\n      //id: uuid(), //no longet needed because the DB puts a id\n      name: name,\n      email: email,\n      phone: phone\n    };\n\n    const res = await axios.post(\n      `https://jsonplaceholder.typicode.com/users/`,\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      //clear state\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    //console.log(\"addContact\", { errors }, { name });\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params; //get params from url\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    /* fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updContact),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n      .then(response => response.json())\n      .then(data => dispatch({ type: \"UPDATE_CONTACT\", payload: data })); */\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 - Page not found</h1>\n      <p className=\"lead\">Sorry that page does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class Test extends Component {\n  state = { title: \"\", body: \"\" };\n\n  componentDidMount() {\n    console.log(\"mount\");\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          title: data.title,\n          body: data.body\n        });\n      });\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>TEST</h1>\n        <h2>{title}</h2>\n        <h2>{body}</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}